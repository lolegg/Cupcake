@model Cupcake.Plugin.TaskModule.Models.TaskIssuedModel
@using Cupcake.Plugin.TaskModule.Helper
@using Cupcake.Web.Framework
@*@{
        ViewBag.Title = "Index";
        Layout = "~/Views/Shared/_Layout.cshtml";
    }*@
<style type="text/css">
    .form-controlimg {
        width: auto;
        float: right;
        height: 32px;
    }
    .displaynone {
        display: none;
    }
    .heightdate {
        height: 34px;
    }
    .img_pailie {
        position: relative;
        float: left;
    }

        .img_pailie a {
            position: absolute;
            top: -14px;
            right: -7px;
        }
</style>
<div class="container-fluid">
    <div class="row">
        <div class="col-sm-12">
            @using (Ajax.BeginForm(new AjaxOptions { }))
            {
                @Html.AntiForgeryToken()
                <div class="row">
                    <div class="col-xs-12">
                        <div class="form-group">
                            <div class="input-group">
                                @Html.LabelFor(model => model.TaskOverview, new { @class = "input-group-addon" })
                                @Html.EditorFor(m => m.TaskOverview)
                            </div>
                            @Html.ValidationMessageFor(m => m.TaskOverview)
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-xs-12">
                        <div class="form-group">
                            <div class="input-group">
                                @Html.LabelFor(model => model.Description, new { @class = "input-group-addon" })
                                @Html.TextAreaFor(m => m.Description, new { @class = "form-control" })
                            </div>
                            @Html.ValidationMessageFor(m => m.Description)
                        </div>
                    </div>
                   
                </div>
                <div class="row">
                    <div class="col-xs-6">
                        <div class="form-group">
                            <div class="input-group">
                                @Html.LabelFor(model => model.IssuedDate, new { @class = "input-group-addon" })
                                @Html.Editor("IssuedDate", "DateTime4Bootstrap")
                                <span class="input-group-addon">
                                    <i class="fa fa-calendar"></i>
                                </span>
                            </div>
                            @Html.ValidationMessageFor(m => m.IssuedDate)
                        </div>
                    </div>
                    <div class="col-xs-6">
                        <div class="form-group">
                            <div class="input-group">
                                @Html.LabelFor(model => model.Publisher, new { @class = "input-group-addon" })
                                @Html.EditorFor(m => m.Publisher)
                            </div>
                            @Html.ValidationMessageFor(m => m.Publisher)
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-xs-6">
                        <div class="form-group">
                            <div class="input-group">
                                @Html.LabelFor(model => model.CompleteDate, new { @class = "input-group-addon" })
                                @Html.Editor("CompleteDate", "DateTime4Bootstrap")
                                <span class="input-group-addon">
                                    <i class="fa fa-calendar"></i>
                                </span>
                            </div>
                            @Html.ValidationMessageFor(m => m.CompleteDate)
                        </div>
                    </div>
                    <div class="col-xs-6">
                        <div class="form-group">
                            <div class="input-group">
                                @Html.LabelFor(model => model.TaskType, new { @class = "input-group-addon" })
                                @Html.Editor("TaskType", "Enum4Bootstrap", new { selectList = DataDictionaryHelper.GetSelectList("任务类型", Guid.Parse(Model.TaskType)) })
                            </div>
                            @Html.ValidationMessageFor(m => m.TaskType)
                        </div>
                    </div>
                </div>
                    <div class="row">
                    <div class="col-xs-12">
                        <div class="form-group">
                            <div class="input-group">
                                <button type="button"  class="btn btn-primary" id="btnFileUpload" onclick="DirecUpload();"><i class="fa fa-search"></i>资源上传</button>
                                <div id="FileDiv" style="margin-top:10px">
                                    @if (Model.EnclosureUrl != null)
                                    {
                                        string[] sArray = Model.EnclosureUrl.Split(new char[] { ',' });
                                        string[] sArrayName = Model.EnclosureName.Split(new char[] { ',' });
                                        string[] sThumbnail = Model.Thumbnail.Split(new char[] { ',' });
                                        for (int i = 0; i < sArray.Count(); i++)
                                        {
                                            <div style="margin-top:5px;"><img src="@sThumbnail[i]" style=" width:25px;height:25px;" /><a href="@sArray[i]" target="_blank" download="@sArrayName[i]">@sArrayName[i] 下载</a><a onclick=shanchu(this)><img src="/Plugins/Cupcake.Plugin.TaskModule/Content/img/cha.png" style="width:15px; height:15px;cursor: pointer" /></a></div>
                                        }
                                    }
                                </div>
                                @Html.HiddenFor(m => m.EnclosureUrl)
                                @Html.HiddenFor(m => m.EnclosureName)
                                @Html.HiddenFor(m => m.Thumbnail)
                            </div>
                        </div>
                    </div>
                </div>
                 <div class="row">
                        <div class="col-xs-12">
                            <div class="form-group">
                                <div class="input-group">
                                    @Html.LabelFor(model => model.Department, new { @class = "input-group-addon" })
                                    <div style=" background-color: #fbfbfb; border: 1px solid #d5d5d5; height: auto;">
                                        @{
                                            var organizationList = ViewBag.OrganizationList;
                                            @Html.Raw(TreeHtml.GetTreeHtml(organizationList, new Guid("00000000-0000-0000-0000-000000000000"), Model.Department))
                                        }
                                    </div>
                                    
                                </div>       
                            </div>
                        </div>
                    </div>
            }
        </div>
    </div>
</div>
<script>
    $(document).ready(function () {
        //$("#IssuedDate,#CompleteDate").addClass("Wdate,heightdate");
        $("#IssuedDate,#CompleteDate").click(function () {
            WdatePicker({ dateFmt: 'yyyy-MM-dd', readOnly: true });
        });
        $('#IssuedDate').val('@Model.IssuedDate.ToString("yyyy/MM/dd")')
        $('#CompleteDate').val('@Model.CompleteDate.ToString("yyyy/MM/dd")')
    });
    function DirecUpload() {
        var settings = {
            fileType: "媒体类型>Office文件",
            fileExts: "*.zip",
            fileLimit: 3,
            fileSizeLimit: "5mb",
            scopes: "public",//private
            thumbnail: "w",
            width: "32",
            height: ""
        };

        var buttonInfos = {
            button1: '@Html.ButtonShiny("上传好了", "fa-save", "ReturnFileUploadData(allFiles);")'
        }
        showModal2("文件上传", "/Uploadify", settings, buttonInfos);
    }
    //回调函数
    function ReturnFileUploadData(nodes) {
        var enclosureUrl = $("#EnclosureUrl").val();
        var enclosureName = $("#EnclosureName").val();
        var thumbnail = $("#Thumbnail").val();
        for (var i = 0; i < nodes.length; i++) {
            if (i > 0) {
                enclosureUrl += ",";
                enclosureName += ",";
                thumbnail += ",";
            }
            else if (enclosureUrl.length > 0) {
                enclosureUrl += ",";
                enclosureName += ",";
                thumbnail += ",";
            }
            enclosureUrl += nodes[i].RelativePath;
            enclosureName += nodes[i].Name;
            thumbnail += nodes[i].thumbnailPath;
            $("#FileDiv").append("<div style=\'margin-top:5px;\'><img src=\'" + nodes[i].thumbnailPath + "\' style=\'width:25px; height:25px;\'/><a href=\"" + nodes[i].RelativePath + "\"  target=\"_blank\"   download=\"" + nodes[i].Name + "\">" + nodes[i].Name + "下载</a><a onclick=\'shanchu(this)\'><img src=\'/Plugins/Cupcake.Plugin.TaskModule/Content/img/cha.png\' style=\'width:15px; height:15px;cursor: pointer\' /></a></div>")
        }

        $("#EnclosureUrl").val(enclosureUrl);
        $("#EnclosureName").val(enclosureName);
        $("#Thumbnail").val(thumbnail);
        $("#cupcakeModal2").parent().modal("hide");
    }
    function shanchu(dbc) {
        $("#EnclosureUrl").val("");
        $("#EnclosureName").val("");
        $("#Thumbnail").val("");
        $(dbc).parent().remove();
        var EnclosureUrl = "";
        var EnclosureName = "";
        var Thumbnail = "";
        var i = 0;
        $("#FileDiv > div").each(function () {
            if (i > 0) {
                EnclosureUrl += ",";
                EnclosureName += ",";
                Thumbnail += ",";
            }
            var href = $(this).children().next().prop("href");
            var name = $(this).children().next().prop("download");
            var thumb = $(this).children().prop("src");
            EnclosureUrl += href;
            EnclosureName += name;
            Thumbnail += thumb;
            i++;
        })
        $("#EnclosureUrl").val(EnclosureUrl);
        $("#EnclosureName").val(EnclosureName);
        $("#Thumbnail").val(Thumbnail);
    }
    //关闭layer
    function CloseLayer() {
        layer.closeAll();
    }
    $("input[name='OrganizationList']").each(function () {
        if ($(this).prop("id") != "00000000-0000-0000-0000-000000000000") {
            $(this).parents("p:first").addClass("displaynone")
        }
    });
    function btnCheck(obj) {
        if ($(obj).prop("checked") == true) {
            child($(obj).val(), true);
        }
        else {
            child($(obj).val(), false);
        }
    }
    function child(pid, isChecked) {
        $("input[name='OrganizationList']").each(function () {
            if ($(this).prop("id") == pid) {
                $(this).prop("checked", isChecked)
                child($(this).val(), isChecked)
            }
        })
    }
    function btnShow(obj) {
        if ($(obj).prop("alt") == "折叠") {
            $(obj).prop("alt", "展开")
            $(obj).prop("src", "/Plugins/Cupcake.Plugin.TaskModule/Content/img/jh.jpg")
            showchild($(obj).prop("id"), 1);
        }
        else {
            $(obj).prop("alt", "折叠")
            $(obj).prop("src", "/Plugins/Cupcake.Plugin.TaskModule/Content/img/jiah.jpg")
            showchild($(obj).prop("id"), 2);
        }
    }
    function showchild(pid, isshow) {
        $("input[name='OrganizationList']").each(function () {
            if ($(this).prop("id") == pid) {
                if (isshow == "1") {
                    $(this).parents("p:first").removeClass("displaynone")
                }
                else {
                    $(this).parents("p:first").addClass("displaynone")
                    $(this).prev().prop("alt", "折叠")
                    $(this).prev().prop("src", "/Plugins/Cupcake.Plugin.TaskModule/Content/img/jiah.jpg")
                    showchild($(this).val(), isshow)
                }

            }
        })
    }
</script>