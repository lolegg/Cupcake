@model Cupcake.Plugin.NetWork.Models.WorkGuideModel
@using Cupcake.Web
@using Cupcake.Plugin.NetWork.Helper
@using Cupcake.Core.Domain
@using Cupcake.Web.Framework

    <div class="container-fluid">
        <div class="row">
            <div class="col-sm-12">
                @using (Ajax.BeginForm(new AjaxOptions { }))
                {
                    @Html.AntiForgeryToken()
                    <div class="row">
                        <div class="col-xs-6">
                            <div class="form-group">
                                <div class="input-group">
                                    @Html.LabelFor(model => model.Title, new { @class = "input-group-addon" })
                                    @Html.EditorFor(m => m.Title)
                                </div>
                                @Html.ValidationMessageFor(m => m.Title)
                            </div>
                        </div>
                        <div class="col-xs-6">
                            <div class="form-group">
                                <div class="input-group">
                                    @Html.LabelFor(model => model.WorkType, new { @class = "input-group-addon" })
                                    @Html.Editor("WorkType", "Enum4Bootstrap", new { selectList = DataDictionaryHelper.GetSelectList("组织类型") })
                                </div>
                                @Html.ValidationMessageFor(m => m.WorkType)
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-xs-12">
                            <div class="form-group">
                                <div class="input-group">
                                    @Html.LabelFor(model => model.ScopeOfApplication, new { @class = "input-group-addon" })
                                    @Html.EditorFor(m => m.ScopeOfApplication, new { @class = "form-control" })
                                </div>
                                @Html.ValidationMessageFor(m => m.ScopeOfApplication)
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-xs-12">
                            <div class="form-group">
                                <div class="input-group">
                                    @Html.LabelFor(model => model.CommitmentTimeLimit, new { @class = "input-group-addon" })
                                    @Html.TextBoxFor(m => m.CommitmentTimeLimit, new { @class = "form-control" })
                                </div>
                                @Html.ValidationMessageFor(m => m.CommitmentTimeLimit)
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-xs-12">
                            <div class="form-group">
                                <div class="input-group">
                                    @Html.LabelFor(model => model.LegalTimeLimit, new { @class = "input-group-addon" })
                                    @Html.TextBoxFor(m => m.LegalTimeLimit, new { @class = "form-control" })
                                </div>
                                @Html.ValidationMessageFor(m => m.LegalTimeLimit)
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-xs-12">
                            <div class="form-group">
                                <div class="input-group">
                                    @*@Html.LabelFor(model => model.HandlePlaceTime, new { @class = "input-group-addon" })*@
                                    <label class="input-group-addon">办理地点<br />及时间</label> 
                                    @Html.TextAreaFor(m => m.HandlePlaceTime)
                                </div>
                                @Html.ValidationMessageFor(m => m.HandlePlaceTime)
                            </div>
                        </div>
                    </div>
                   <div class="row">
                        <div class="col-xs-12">
                            <div class="form-group">
                                <div class="input-group">
                                    @Html.LabelFor(model => model.ApplicationConditions, new { @class = "input-group-addon" })
                                    @Html.TextAreaFor(m => m.ApplicationConditions)
                                </div>
                                @Html.ValidationMessageFor(m => m.ApplicationConditions)
                            </div>
                        </div>
                    </div>
                   <div class="row">
                        <div class="col-xs-12">
                            <div class="form-group">
                                <div class="input-group">
                                    @Html.LabelFor(model => model.ApplicationMaterials, new { @class = "input-group-addon" })
                                    @Html.TextAreaFor(m => m.ApplicationMaterials)
                                </div>
                                @Html.ValidationMessageFor(m => m.ApplicationMaterials)
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-xs-12">
                            <div class="form-group">
                                <div class="input-group">
                                    @Html.LabelFor(model => model.SetBasis, new { @class = "input-group-addon" })
                                    @Html.TextAreaFor(m => m.SetBasis)
                                </div>
                                @Html.ValidationMessageFor(m => m.SetBasis)
                            </div>
                        </div>
                    </div>
                   <div class="row">
                        <div class="col-xs-12">
                            <div class="form-group">
                                <div class="input-group">
                                    @Html.LabelFor(model => model.ManagementProcess, new { @class = "input-group-addon" })
                                    @Html.TextAreaFor(m => m.ManagementProcess)
                                </div>
                                @Html.ValidationMessageFor(m => m.ManagementProcess)
                            </div>
                        </div>
                    </div>
                   <div class="row">
                        <div class="col-xs-12">
                            <div class="form-group">
                                <div class="input-group">
                                    @*@Html.LabelFor(model => model.Other, new { @class = "input-group-addon" })*@
                                    <label class="input-group-addon">其&emsp;&emsp;它</label> 
                                    @Html.TextAreaFor(m => m.Other)
                                </div>
                                @Html.ValidationMessageFor(m => m.Other)
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>

<script type="text/javascript" src="~/Content/js/ueditor/ueditor.config.js"></script>
<script type="text/javascript" src="~/Content/js/ueditor/ueditor.all.js"></script>
<script type="text/javascript">
    var ue1 = UE.getEditor('HandlePlaceTime');
    var ue2 = UE.getEditor('ApplicationConditions');
    var ue3 = UE.getEditor('ApplicationMaterials');
    var ue4 = UE.getEditor('SetBasis');
    var ue5 = UE.getEditor('ManagementProcess');
    var ue6 = UE.getEditor('Other');
</script>

